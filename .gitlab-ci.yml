variables:
  LC_ALL: "en_US.UTF-8"
  LANG: "en_US.UTF-8"
  LANGUAGE: "en_US"
  LIB_NAME: "kmmresult"
  GRADLE_USER_HOME: "${CI_PROJECT_DIR}/.gradle"
  GRADLE_OPTS: "-Dorg.gradle.daemon=false -Dorg.gradle.console=plain -Dmaven.repo.local=${CI_PROJECT_DIR}/.m2/repository"
  SECURE_LOG_LEVEL: "debug"
  SAST_JAVA_VERSION: 11
  SECRET_DETECTION_EXCLUDED_PATHS: ".gradle,gradle,.m2"
  SAST_EXPERIMENTAL_FEATURES: "true"
  MOBSF_API_KEY: key


default:
  image: gradle:jdk11
  tags:
    - docker

stages:
  - assemble
  - package

cache:
  paths:
    - ".gradle/wrapper"
    - ".gradle/caches"
    - ".m2/repository"

workflow:
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event' || $CI_COMMIT_REF_NAME == "master" || $CI_COMMIT_REF_NAME == "development" || $CI_COMMIT_REF_NAME =~ /^release.*$/ || $CI_COMMIT_REF_NAME =~ /^feature.*$/

assembleJdk11:
  stage: assemble
  except:
    - tags
  script: |
    ./gradlew --continue clean jvmJar
  artifacts:
    when: always


assembleIos:
  stage: assemble
  except:
    - tags
  tags:
    - ios
  script: |
    ./gradlew --continue clean iosArm64MainKlibrary iosX64MainKlibrary macosArm64MainKlibrary macosX64MainKlibrary 
  artifacts:
    when: always

assembleJs:
  stage: assemble
  except:
    - tags
  script: |
    ./gradlew --continue clean jsIrJar jsLegacyJar wasm32MainKlibrary
  artifacts:
    when: always

publishToGitlab:
  tags:
    - ios
  stage: package
  rules:
    - if: '$CI_COMMIT_BRANCH == "master"'
    - if: '$CI_COMMIT_BRANCH == "development"'
    - if: '$CI_COMMIT_BRANCH =~ /^feature.*$/'
      when: on_success
    - if: '$CI_COMMIT_BRANCH =~ /^release.*$/'
      when: on_success
  image: gradle:jdk11
  script: |
    export VERSION=$(./gradlew properties | grep "^version: " | grep -Po "\d+\.\d+(\.\d+)?((-\w*)+)?")
    [[ -z "$VERSION" ]] && { echo "Version is empty" ; exit 1; }
    echo "Publishing version $VERSION for $LIB_NAME"
    ./gradlew --continue clean assemble publishAllPublicationsToGitlabRepository
    echo "VERSION=$VERSION" >> variables.env
  artifacts:
    when: always
    reports:
      dotenv: variables.env
  needs:
    - job: assembleJdk11
    - job: assembleIos
    - job: assembleJs
      artifacts: true
